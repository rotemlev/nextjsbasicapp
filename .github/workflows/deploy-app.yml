name: Build & Deploy Next.js to AKS

on:
  push:
    branches:
      - main

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_NAME }}.azurecr.io

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.build.outputs.image-tag }}
    steps:
      - uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v1
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Login to ACR
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build & push Docker image
        id: build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.ACR_LOGIN_SERVER }}/nextjsbasicapp:${{ github.sha }}
        outputs:
          image-tag: ${{ env.ACR_LOGIN_SERVER }}/nextjsbasicapp:${{ github.sha }}

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.build.outputs.image-tag }}

  deploy:
    needs: build-and-scan
    runs-on: ubuntu-latest
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: azure/aks-set-context@v1
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Deploy manifests to AKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/ingress.yaml
